// 문제
/* 배열 arr가 주어집니다. 배열 arr의 각 원소는 숫자 0부터 9까지로 이루어져 있습니다. 
이때, 배열 arr에서 연속적으로 나타나는 숫자는 하나만 남기고 전부 제거하려고 합니다. 
단, 제거된 후 남은 수들을 반환할 때는 배열 arr의 원소들의 순서를 유지해야 합니다. 

ex 1) arr = [1, 1, 3, 3, 0, 1, 1] 이면 [1, 3, 0, 1] 을 return 합니다.
ex 2) arr = [4, 4, 4, 3, 3] 이면 [4, 3] 을 return 합니다.

배열 arr에서 연속적으로 나타나는 숫자는 제거하고 남은 수들을 return 하는 solution 함수를 완성해 주세요.
*/

function solution(arr) {
  // 입력 : 0 ~ 9 까지의 숫자 배열
  // 출력 : 중복을 제거한 나머지 숫자의 배열

  // 계속 연속이 되는지 어떻게 알 수 있을까?

  // 1. indexOf 메서드 사용 : 가장 처음 발견한 문자의 인덱스를 반환하기 때문에, 중복된다면 같은 값이 나온다.
  // ...이 값이 이전 값과 동일한지 확인한 후, 동일하지 않을 때에만 정답 배열에 넣어 리턴한다.
  // ...메서드 사용 때문인지 시간초과가 발생했다.

  // 2. 인덱스로 배열 요소를 직접 비교 : 현재 값과 직전 값을 비교해, 일치하지 않는 경우만 정답 배열에 push한다.
  // ...처음 접근은 원본 배열을 splice로 삭제하는 것이었는데, 그렇게하면 길이가 달라져서인지 1개까지는 삭제 되지만,
  // ...2개 연속으로 삭제되지 않는다.

  let answer = [];

  for (let i = 0; i < arr.length; i++) {
    // if (arr.indexOf(arr[i]) !== arr.indexOf(arr[i - 1])) answer.push(arr[i]); //시간초과
    if (arr[i] !== arr[i - 1]) answer.push(arr[i]); // 정답 인정
  }

  return answer;
}

console.log(solution([4, 4, 4, 3, 3]));

//
